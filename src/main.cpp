// generated by Fast Light User Interface Designer (fluid) version 1.0301

#include <FL/Fl_Group.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Box.H>
#include <FL/Fl.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Multiline_Input.H>
#include <flx/Flx_ToolBar.h>


#include <Flx_Mdi_Internal.h>

using namespace flx;

int main(int argc, char **argv) {
    
    Fl_Double_Window win( 400, 50, 800, 800, "Multi Document Application" );
    Flx_ToolBar toolbar( 0, 0, 800, 40 );
    toolbar.color( fl_rgb_color( 200, 200, 200 ) );
    Flx_MdiContainer mdiContainer( 0, 40, 800, 600 );
    mdiContainer.box( FL_FLAT_BOX );
    mdiContainer.color( FL_BLUE );
    
        Flx_MdiChild child1( 50, 50, 250, 250, "Child 1" );
        Rectangle rect = child1.getClientAreaSize();
        Fl_Multiline_Input inp1( rect.X, rect.Y, rect.W, rect.H, "inp1" );
        inp1.align( FL_ALIGN_CENTER | FL_ALIGN_INSIDE );
        inp1.box( FL_FLAT_BOX );
        child1.add( inp1 );

        Flx_MdiChild child2( 100, 100, 250, 250, "Child 2" );
        rect = child2.getClientAreaSize();
        Fl_Multiline_Input inp2( rect.X, rect.Y, rect.W, rect.H, "inp2" );
        inp2.align( FL_ALIGN_CENTER | FL_ALIGN_INSIDE );
        inp2.box( FL_FLAT_BOX );
        child2.add( inp2 );
        
        Flx_MdiChild child3( 130, 130, 250, 250, "Child 3" );
        rect = child3.getClientAreaSize();
        Fl_Multiline_Input inp3( rect.X, rect.Y, rect.W, rect.H, "inp3" );
        inp3.align( FL_ALIGN_CENTER | FL_ALIGN_INSIDE );
        inp3.box( FL_FLAT_BOX );
        child3.add( inp3 );

    mdiContainer.end();

    win.end();
    win.resizable( mdiContainer );

    win.show(argc, argv);
    
    fprintf( stderr, "index child1, child2: %d; %d\n", 
            flx::getWidgetIndex( child1 ), flx::getWidgetIndex( child2 ) );
    
    Fl_Widget *pW = Fl::focus();
    
   
    return Fl::run();
}
